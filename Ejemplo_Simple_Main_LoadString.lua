--[[
    EJEMPLO SIMPLE DE USO - Main_LoadString.lua
    
    Este ejemplo muestra las funciones principales de LXAIL
    sin el KeySystem para evitar bucles infinitos en el entorno de prueba.
--]]

print("üöÄ Cargando LXAIL - Ejemplo Simple de Uso")

-- === CARGAR LIBRER√çA LXAIL ===
local LXAIL = dofile("Main_LoadString.lua")

-- === CREAR VENTANA SIN KEYSYSTEM ===
local Window = LXAIL:CreateWindow({
    Name = "üéÆ LXAIL Demo Hub",
    LoadingTitle = "Cargando LXAIL...",
    LoadingSubtitle = "Ejemplo de funciones principales",
    ConfigurationSaving = {
        Enabled = true,
        FolderName = "LXAIL_Demo"
    },
    Discord = {
        Enabled = true,
        Invite = "discord.gg/ejemplo"
    }
    -- KeySystem desactivado para este ejemplo
})

-- === CREAR PESTA√ëAS ===
local MainTab = Window:CreateTab({
    Name = "üè† Principal",
    Icon = "rbxassetid://4483345998"
})

local ComponentsTab = Window:CreateTab({
    Name = "üß© Componentes",
    Icon = "rbxassetid://4483345998"
})

-- === PESTA√ëA PRINCIPAL ===
MainTab:CreateLabel({
    Text = "üéâ ¬°Bienvenido a LXAIL!"
})

MainTab:CreateParagraph({
    Title = "üìñ Acerca de LXAIL",
    Content = "LXAIL es una replica completa de Rayfield con dise√±o moderno y todas las funciones necesarias para crear interfaces de usuario profesionales en Roblox."
})

MainTab:CreateDivider()

-- Toggle principal
MainTab:CreateToggle({
    Name = "üöÄ Auto Farm",
    CurrentValue = false,
    Flag = "AutoFarm",
    Callback = function(Value)
        print("Auto Farm:", Value and "ACTIVADO" or "DESACTIVADO")
        
        LXAIL:Notify({
            Title = "Auto Farm",
            Content = Value and "Auto Farm activado" or "Auto Farm desactivado",
            Duration = 3,
            Type = Value and "Success" or "Info"
        })
    end
})

-- Slider de velocidad
MainTab:CreateSlider({
    Name = "‚ö° Velocidad",
    Range = {16, 200},
    Increment = 1,
    Suffix = " WS",
    CurrentValue = 50,
    Flag = "PlayerSpeed",
    Callback = function(Value)
        print("Velocidad establecida:", Value)
        
        if Value > 100 then
            LXAIL:Notify({
                Title = "Velocidad Alta",
                Content = "Cuidado: Velocidad muy alta",
                Duration = 3,
                Type = "Warning"
            })
        end
    end
})

-- Bot√≥n de acci√≥n
MainTab:CreateButton({
    Name = "üè† Teletransporte al Spawn",
    Callback = function()
        print("Teletransportando al spawn...")
        
        LXAIL:Notify({
            Title = "Teletransporte",
            Content = "Teletransportado al spawn",
            Duration = 2,
            Type = "Success"
        })
    end
})

-- === PESTA√ëA COMPONENTES ===
ComponentsTab:CreateLabel({
    Text = "üß© Todos los Componentes"
})

-- Input de texto
ComponentsTab:CreateInput({
    Name = "üéØ Nombre del Jugador",
    PlaceholderText = "Escribe un nombre...",
    RemoveTextAfterFocusLost = false,
    Flag = "PlayerName",
    Callback = function(Text)
        print("Nombre ingresado:", Text)
        
        if Text ~= "" then
            LXAIL:Notify({
                Title = "Jugador",
                Content = "Objetivo: " .. Text,
                Duration = 2,
                Type = "Info"
            })
        end
    end
})

-- Dropdown simple
ComponentsTab:CreateDropdown({
    Name = "üéÆ Modo de Juego",
    Options = {"Aventura", "Supervivencia", "Creativo", "PvP"},
    CurrentOption = {"Aventura"},
    MultipleOptions = false,
    Flag = "GameMode",
    Callback = function(Option)
        local mode = Option[1]
        print("Modo seleccionado:", mode)
        
        LXAIL:Notify({
            Title = "Modo",
            Content = "Modo: " .. mode,
            Duration = 2,
            Type = "Success"
        })
    end
})

-- Dropdown m√∫ltiple
ComponentsTab:CreateDropdown({
    Name = "üìä Caracter√≠sticas",
    Options = {"ESP", "Aimbot", "Speed", "Jump", "Fly"},
    CurrentOption = {"ESP"},
    MultipleOptions = true,
    Flag = "Features",
    Callback = function(Options)
        print("Caracter√≠sticas seleccionadas:")
        for _, feature in ipairs(Options) do
            print("- " .. feature)
        end
        
        LXAIL:Notify({
            Title = "Caracter√≠sticas",
            Content = "Caracter√≠sticas actualizadas",
            Duration = 2,
            Type = "Info"
        })
    end
})

-- Color picker
ComponentsTab:CreateColorPicker({
    Name = "üé® Color del Tema",
    Color = Color3.fromRGB(255, 100, 100),
    Flag = "ThemeColor",
    Callback = function(Value)
        print("Color seleccionado RGB:", math.floor(Value.R * 255), math.floor(Value.G * 255), math.floor(Value.B * 255))
        
        LXAIL:Notify({
            Title = "Color",
            Content = "Color del tema actualizado",
            Duration = 2,
            Type = "Success"
        })
    end
})

-- Keybind
ComponentsTab:CreateKeybind({
    Name = "üîë Toggle UI",
    CurrentKeybind = "F",
    HoldToInteract = false,
    Flag = "ToggleUI",
    Callback = function(Keybind)
        print("Keybind establecido:", Keybind)
        
        LXAIL:Notify({
            Title = "Keybind",
            Content = "UI toggle: " .. tostring(Keybind),
            Duration = 2,
            Type = "Info"
        })
    end
})

ComponentsTab:CreateDivider()

-- === BOTONES DE DEMOSTRACI√ìN ===
ComponentsTab:CreateButton({
    Name = "üîî Probar Notificaciones",
    Callback = function()
        -- Demostrar todos los tipos
        LXAIL:Notify({
            Title = "‚úÖ √âxito",
            Content = "Notificaci√≥n de √©xito",
            Duration = 3,
            Type = "Success"
        })
        
        spawn(function()
            wait(1)
            LXAIL:Notify({
                Title = "‚ö†Ô∏è Advertencia", 
                Content = "Notificaci√≥n de advertencia",
                Duration = 3,
                Type = "Warning"
            })
            
            wait(1)
            LXAIL:Notify({
                Title = "‚ùå Error",
                Content = "Notificaci√≥n de error",
                Duration = 3,
                Type = "Error"
            })
            
            wait(1)
            LXAIL:Notify({
                Title = "‚ÑπÔ∏è Info",
                Content = "Notificaci√≥n informativa",
                Duration = 3,
                Type = "Info"
            })
        end)
    end
})

ComponentsTab:CreateButton({
    Name = "üí¨ Discord Prompt",
    Callback = function()
        LXAIL:Prompt({
            Title = "üí¨ √önete al Discord",
            SubTitle = "Comunidad LXAIL",
            Content = "¬øTe gustar√≠a unirte a nuestro servidor de Discord?",
            Actions = {
                Accept = {
                    Name = "S√≠, unirme",
                    Callback = function()
                        LXAIL:Notify({
                            Title = "Discord",
                            Content = "Abriendo Discord...",
                            Duration = 2,
                            Type = "Success"
                        })
                    end
                },
                Ignore = {
                    Name = "Ahora no",
                    Callback = function()
                        LXAIL:Notify({
                            Title = "Discord",
                            Content = "Tal vez m√°s tarde",
                            Duration = 2,
                            Type = "Info"
                        })
                    end
                }
            }
        })
    end
})

-- === GESTI√ìN DE CONFIGURACI√ìN ===
ComponentsTab:CreateDivider()

ComponentsTab:CreateLabel({
    Text = "üíæ Configuraci√≥n"
})

ComponentsTab:CreateButton({
    Name = "üíæ Guardar Config",
    Callback = function()
        LXAIL:SaveConfiguration()
        LXAIL:Notify({
            Title = "Guardado",
            Content = "Configuraci√≥n guardada",
            Duration = 2,
            Type = "Success"
        })
    end
})

ComponentsTab:CreateButton({
    Name = "üìÇ Cargar Config",
    Callback = function()
        LXAIL:LoadConfiguration()
        LXAIL:Notify({
            Title = "Cargado",
            Content = "Configuraci√≥n cargada",
            Duration = 2,
            Type = "Success"
        })
    end
})

-- === BOT√ìN FLOTANTE ===
LXAIL:CreateFloatingButton({
    Icon = "rbxassetid://4483345998",
    Callback = function()
        LXAIL:Toggle()
        LXAIL:Notify({
            Title = "UI",
            Content = "Visibilidad alternada",
            Duration = 1,
            Type = "Info"
        })
    end
})

-- === NOTIFICACI√ìN DE BIENVENIDA ===
LXAIL:Notify({
    Title = "üéâ LXAIL Cargado",
    Content = "Ejemplo simple cargado exitosamente",
    Duration = 4,
    Type = "Success"
})

print("‚úÖ === EJEMPLO SIMPLE DE LXAIL COMPLETADO ===")
print("üìã Funciones demostradas:")
print("  ‚úÖ CreateWindow - Ventana principal")
print("  ‚úÖ CreateTab - Sistema de pesta√±as")
print("  ‚úÖ CreateToggle - Interruptores")
print("  ‚úÖ CreateSlider - Deslizadores")
print("  ‚úÖ CreateButton - Botones")
print("  ‚úÖ CreateInput - Campos de texto")
print("  ‚úÖ CreateDropdown - Men√∫s desplegables")
print("  ‚úÖ CreateColorPicker - Selector de colores")
print("  ‚úÖ CreateKeybind - Asignaci√≥n de teclas")
print("  ‚úÖ CreateLabel - Etiquetas")
print("  ‚úÖ CreateParagraph - P√°rrafos")
print("  ‚úÖ CreateDivider - Separadores")
print("  ‚úÖ Notify - Sistema de notificaciones")
print("  ‚úÖ Prompt - Ventanas modales")
print("  ‚úÖ SaveConfiguration/LoadConfiguration - Configuraci√≥n")
print("  ‚úÖ CreateFloatingButton - Bot√≥n flotante")
print("  ‚úÖ Toggle - Control de visibilidad")
print("")
print("üéÆ El sistema de notificaciones est√° funcionando perfectamente!")
print("üì± Compatible con dispositivos m√≥viles")
print("üöÄ Listo para usar en Roblox!")

--[[
=== PARA USAR EN ROBLOX ===

1. Sube Main_LoadString.lua a GitHub/Pastebin
2. Usa este c√≥digo:

local LXAIL = loadstring(game:HttpGet("TU_URL_AQUI"))()

3. Copia y pega el c√≥digo de este ejemplo

=== CARACTER√çSTICAS ===
‚úÖ 100% Compatible con Rayfield
‚úÖ Notificaciones funcionando correctamente
‚úÖ Todos los componentes disponibles
‚úÖ Dise√±o moderno y oscuro
‚úÖ Animaciones fluidas
‚úÖ Soporte m√≥vil completo
‚úÖ Sistema de configuraci√≥n
‚úÖ Arquitectura modular

¬°Las notificaciones ya est√°n arregladas! üéâ
--]]