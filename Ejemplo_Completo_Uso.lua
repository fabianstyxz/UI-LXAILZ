-- ===================================
-- LXAIL - Ejemplo Completo de Uso
-- UI Moderna con Efectos Glitch
-- ===================================

-- Cargar la librer√≠a (en Roblox usa loadstring)
local LXAIL = require("Main_LoadString") -- o loadstring en Roblox

print("üöÄ === LXAIL - EJEMPLO COMPLETO DE USO ===")
print("üé® Nueva UI moderna con efectos glitch y animaciones")

-- ===================================
-- 1. CREAR VENTANA PRINCIPAL
-- ===================================
local Window = LXAIL:CreateWindow({
    Name = "LXAIL - BETA",              -- T√≠tulo con animaci√≥n de letras
    LoadingTitle = "LXAIL Cargando...",  -- Pantalla de carga
    LoadingSubtitle = "UI Moderna",      -- Subt√≠tulo de carga
    ConfigurationSaving = {
        Enabled = true,
        FolderName = "LXAIL_Config",
        FileName = "MiConfiguracion"
    },
    Discord = {
        Enabled = true,
        Invite = "discord.gg/ejemplo",
        RememberJoins = true
    },
    KeySystem = false -- Desactivado para este ejemplo
})

print("‚úÖ Ventana creada con dise√±o moderno!")

-- ===================================
-- 2. CREAR PESTA√ëAS (TABS)
-- ===================================

-- Pesta√±a Principal
local MainTab = Window:CreateTab({
    Name = "Principal",
    Icon = "rbxassetid://4483345998"
})

-- Pesta√±a de Configuraci√≥n
local ConfigTab = Window:CreateTab({
    Name = "Configuraci√≥n", 
    Icon = "rbxassetid://4483345998"
})

-- Pesta√±a Misc
local MiscTab = Window:CreateTab({
    Name = "Miscel√°neos",
    Icon = "rbxassetid://4483345998"
})

print("‚úÖ Pesta√±as creadas con transiciones glitch!")

-- ===================================
-- 3. COMPONENTES EN PESTA√ëA PRINCIPAL
-- ===================================

-- BOT√ìN ANTI-AFK
MainTab:CreateButton({
    Name = "Anti AFK",
    Callback = function()
        print("üîÑ Sistema Anti-AFK activado!")
        -- Aqu√≠ ir√≠as tu c√≥digo anti-AFK
    end
})

-- TOGGLE AUTO ATTACK
local autoAttackEnabled = false
MainTab:CreateToggle({
    Name = "Auto Attack",
    Default = false,
    Flag = "AutoAttackFlag", -- Para guardar en configuraci√≥n
    Callback = function(Value)
        autoAttackEnabled = Value
        print("‚öîÔ∏è Auto Attack:", Value and "ACTIVADO" or "DESACTIVADO")
        -- Aqu√≠ ir√≠a tu l√≥gica de auto attack
    end
})

-- TOGGLE AUTO BLOCK
local autoBlockEnabled = false
MainTab:CreateToggle({
    Name = "Auto Block", 
    Default = false,
    Flag = "AutoBlockFlag",
    Callback = function(Value)
        autoBlockEnabled = Value
        print("üõ°Ô∏è Auto Block:", Value and "ACTIVADO" or "DESACTIVADO")
        -- Aqu√≠ ir√≠a tu l√≥gica de auto block
    end
})

-- TOGGLE AUTO COUNTER
local autoCounterEnabled = false
MainTab:CreateToggle({
    Name = "Auto Counter",
    Default = false,
    Flag = "AutoCounterFlag", 
    Callback = function(Value)
        autoCounterEnabled = Value
        print("‚ö° Auto Counter:", Value and "ACTIVADO" or "DESACTIVADO")
        -- Aqu√≠ ir√≠a tu l√≥gica de auto counter
    end
})

-- SLIDER DISTANCIA ATTACK
local attackDistance = 50
MainTab:CreateSlider({
    Name = "Distancia Auto Attack",
    Min = 10,
    Max = 100,
    Increment = 5,
    Default = 50,
    Flag = "AttackDistanceFlag",
    Callback = function(Value)
        attackDistance = Value
        print("üìè Distancia Auto Attack:", Value, "studs")
        -- Aqu√≠ actualizar√≠as la distancia de ataque
    end
})

-- SLIDER DISTANCIA BLOCK
local blockDistance = 30
MainTab:CreateSlider({
    Name = "Distancia Auto Block",
    Min = 5,
    Max = 80,
    Increment = 5,
    Default = 30,
    Flag = "BlockDistanceFlag",
    Callback = function(Value)
        blockDistance = Value
        print("üõ°Ô∏è Distancia Auto Block:", Value, "studs")
        -- Aqu√≠ actualizar√≠as la distancia de bloqueo
    end
})

-- SLIDER DISTANCIA COUNTER
local counterDistance = 25  
MainTab:CreateSlider({
    Name = "Distancia Auto Counter",
    Min = 5,
    Max = 60,
    Increment = 5,
    Default = 25,
    Flag = "CounterDistanceFlag",
    Callback = function(Value)
        counterDistance = Value
        print("‚ö° Distancia Auto Counter:", Value, "studs")
        -- Aqu√≠ actualizar√≠as la distancia de counter
    end
})

print("‚úÖ Componentes principales a√±adidos!")

-- ===================================
-- 4. COMPONENTES EN CONFIGURACI√ìN
-- ===================================

-- INPUT PARA NOMBRE DE JUGADOR
ConfigTab:CreateInput({
    Name = "Jugador Objetivo",
    PlaceholderText = "Escribe el nombre...",
    RemoveTextAfterFocusLost = false,
    Flag = "TargetPlayerFlag",
    Callback = function(Text)
        print("üéØ Jugador objetivo establecido:", Text)
        -- Aqu√≠ guardar√≠as el jugador objetivo
    end
})

-- DROPDOWN MODO DE JUEGO
ConfigTab:CreateDropdown({
    Name = "Modo de Juego",
    Options = {"Aventura", "PvP", "Farming", "Exploraci√≥n"},
    CurrentOption = {"Aventura"},
    MultipleOptions = false,
    Flag = "GameModeFlag",
    Callback = function(Option)
        print("üéÆ Modo de juego:", Option)
        -- Aqu√≠ cambiar√≠as el modo de juego
    end
})

-- DROPDOWN CARACTER√çSTICAS ACTIVAS (M√öLTIPLE)
ConfigTab:CreateDropdown({
    Name = "Caracter√≠sticas Activas",
    Options = {"ESP", "Aimbot", "Speed Hack", "Fly", "Noclip"},
    CurrentOption = {"ESP"},
    MultipleOptions = true,
    Flag = "ActiveFeaturesFlag",
    Callback = function(Options)
        print("üîß Caracter√≠sticas activas:", table.concat(Options, ", "))
        -- Aqu√≠ activar√≠as/desactivar√≠as caracter√≠sticas
    end
})

-- COLOR PICKER PARA TEMA
ConfigTab:CreateColorPicker({
    Name = "Color del Tema",
    Color = Color3.fromRGB(255, 0, 0),
    Flag = "ThemeColorFlag",
    Callback = function(Value)
        print("üé® Color del tema cambiado a RGB:", math.floor(Value.R*255), math.floor(Value.G*255), math.floor(Value.B*255))
        -- Aqu√≠ cambiar√≠as el color del tema
    end
})

-- KEYBIND TOGGLE UI
ConfigTab:CreateKeybind({
    Name = "Toggle UI",
    CurrentKeybind = "F",
    HoldToInteract = false,
    Flag = "ToggleUIKeybind",
    Callback = function(Keybind)
        print("‚å®Ô∏è Keybind Toggle UI:", Keybind)
        -- El toggle ya est√° implementado autom√°ticamente
    end
})

-- KEYBIND SPRINT (MANTENER PRESIONADO)
ConfigTab:CreateKeybind({
    Name = "Sprint (Mantener)",
    CurrentKeybind = "LeftShift", 
    HoldToInteract = true,
    Flag = "SprintKeybind",
    Callback = function(Keybind)
        print("üèÉ Keybind Sprint:", Keybind)
        -- Aqu√≠ implementar√≠as el sprint
    end
})

print("‚úÖ Configuraci√≥n a√±adida!")

-- ===================================
-- 5. COMPONENTES EN MISCEL√ÅNEOS
-- ===================================

-- P√ÅRRAFO INFORMATIVO
MiscTab:CreateParagraph({
    Title = "Acerca de LXAIL",
    Content = "LXAIL es una librer√≠a UI moderna que replica completamente la funcionalidad de Rayfield con un dise√±o moderno, efectos glitch, soporte m√≥vil y animaciones suaves. Compatible con loadstring() para ejecuci√≥n remota."
})

-- ETIQUETA
MiscTab:CreateLabel({
    Name = "Estado del Sistema",
    Text = "Todos los componentes funcionando correctamente!"
})

-- DIVISOR
MiscTab:CreateDivider({
    Name = "Notificaciones de Prueba"
})

-- BOT√ìN PARA NOTIFICACIONES
MiscTab:CreateButton({
    Name = "Probar Notificaciones",
    Callback = function()
        -- Notificaci√≥n de √©xito
        LXAIL:Notify({
            Title = "¬°√âxito!",
            Content = "LXAIL cargado correctamente!",
            Duration = 5,
            Type = "Success"
        })
        
        wait(1)
        
        -- Notificaci√≥n de advertencia
        LXAIL:Notify({
            Title = "Advertencia",
            Content = "Esta es una notificaci√≥n de advertencia.",
            Duration = 3,
            Type = "Warning"
        })
        
        wait(1)
        
        -- Notificaci√≥n de error
        LXAIL:Notify({
            Title = "Error",
            Content = "Esto es un ejemplo de error.",
            Duration = 4,
            Type = "Error"
        })
        
        wait(1)
        
        -- Notificaci√≥n informativa
        LXAIL:Notify({
            Title = "Informaci√≥n",
            Content = "Sistema de notificaciones funcionando!",
            Duration = 2,
            Type = "Info"
        })
    end
})

print("‚úÖ Miscel√°neos a√±adidos!")

-- ===================================
-- 6. CARACTER√çSTICAS ESPECIALES
-- ===================================

print("")
print("üé® === CARACTER√çSTICAS DE LA UI MODERNA ===")
print("‚Ä¢ T√≠tulo animado 'LXAIL - BETA' con efectos de fade")
print("‚Ä¢ Transiciones de pesta√±as con efectos glitch")
print("‚Ä¢ Bot√≥n flotante draggable para toggle")
print("‚Ä¢ Tema oscuro moderno con gradientes")
print("‚Ä¢ Toggles con iconos y animaciones suaves")
print("‚Ä¢ Sliders interactivos con cajas de valor")
print("‚Ä¢ Efectos hover en todos los elementos")
print("‚Ä¢ Sombras para profundidad visual")
print("‚Ä¢ Bordes redondeados modernos")
print("‚Ä¢ Soporte t√°ctil para m√≥viles")

print("")
print("‚å®Ô∏è === CONTROLES ===")
print("‚Ä¢ Presiona F para mostrar/ocultar la UI")
print("‚Ä¢ Arrastra el bot√≥n flotante para moverlo")
print("‚Ä¢ Click corto en el bot√≥n flotante para toggle")
print("‚Ä¢ Arrastra la barra superior para mover la ventana")
print("‚Ä¢ Click en las pesta√±as para cambiar con efecto glitch")

print("")
print("üöÄ === LXAIL LISTO PARA USAR ===")
print("üìñ En Roblox usar:")
print('   local LXAIL = loadstring(game:HttpGet("tu-url-del-script"))()')
print("üéÆ Todas las funciones de Rayfield funcionan igual!")
print("üí° Presiona F para alternar la visibilidad de la UI")

-- ===================================
-- 7. FUNCIONES ADICIONALES
-- ===================================

-- Funci√≥n para obtener el estado de todos los flags
local function obtenerEstadoCompleto()
    print("")
    print("üìä === ESTADO ACTUAL DE LA CONFIGURACI√ìN ===")
    for flag, value in pairs(LXAIL.Flags) do
        print("üîß", flag, "=", tostring(value))
    end
end

-- Funci√≥n para guardar configuraci√≥n (si est√° habilitado)
local function guardarConfiguracion()
    if LXAIL.ConfigurationSaving and LXAIL.ConfigurationSaving.Enabled then
        -- Aqu√≠ se guardar√≠a la configuraci√≥n
        print("üíæ Configuraci√≥n guardada autom√°ticamente!")
    end
end

-- Ejemplos de uso de las funciones
spawn(function()
    wait(5) -- Esperar 5 segundos
    obtenerEstadoCompleto()
    guardarConfiguracion()
end)

print("")
print("‚úÖ === EJEMPLO COMPLETO FINALIZADO ===")
print("üéØ La UI est√° completamente funcional y lista para usar!")
print("üîÑ Prueba todos los componentes para ver las animaciones!")